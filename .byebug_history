exit
rows = table.css("a").map { |link| link["href"]}.first
rows = table.css("a").map { |link| link["href"]}
rows = table.css("a").map { |link| link}
rows = table.css("a")
rows = table.css("a").attribute("href")
rows = table.css("a").attribute("href").value
rows = table.css("a").attribute("href")
rows = table.css("tr > td a").attribute("href").value
rows = table.css("tr > td a").attribute("href")
rows = table.css("tr >td a").attribute("href")
rows = table.css("tr >td a")
row.text
row.last
row = table.css("tr")
row.text
row = row.css("td")
row = row.first.css("td")
row = row.css("td")
row = row.first.css("td")
row = row.css("td")
row.text
row = row.last
row = row.css("td")
row = row.last
row = table.css("tr")
row = row.last
row = row.text
row = row.last
col = col.text
col = col.css("td")
col = row.last
col = row.last.css("td")
row = table.css("tr > td")
col = row.last.css("td")
col = row.css("td")
row.last
row = table.css("tr > td")
row = table.css("tr > td").text
row = table.css("tr>th").text
row = table.css("tr>th")
row = table.css("tr(0)>td")
row = table.css("tr > td").text
colums = row.css("th").text
colums = row.css("th")
colums = row.css("td").text
colums = row.css("tr > td")
colums = row.css("tr>td")
colums = row.css("td")

row = rows.first.text
row
row = rows[1].text
row = rows[2].text
row = rows.first.text
row = rows.first
rows = table.css("tr")
row = rows.first
rows = table.css("tr").text
row = table.css("tr").text
row = table.css("tr > td").text
row = table.css("tr").text
row = table.css("tr(0)>td")
row = table.css("tr > td").text
row = table.css("tr > td")
row = table.css("tr > td ")
row = table.css("tr(1)>td")
row = table.css("tr>td")
row = table.css("tr")
row = table.css(tr>th)
row = table.css(tr)
table = tables.first
tables = parsed_page.css('.table')
first_type.css('tr > td').text
first_type.css('tr > th').text
first_type.css('tr[1]>th').text()
first_type.css('tr[1]>th')
first_type
tables = first_type.css('.table')
tables = first_type.css('table.open')
first_type.first
first_type.last
first_type.second
first_type.first
first_type.css("nth-child")
first_type.css("nth-child(11)")
first_type.css(".tbody")
first_type
first_type.css("tbody")
first_type.tbody
first_type.tbody > tr:nth-child(2) > td:nth-child(1) > a
first_type
first_type=type.first
type.first
type.count
type = parsed_page.css(".table")
parsed_page
unparsed_page
url
